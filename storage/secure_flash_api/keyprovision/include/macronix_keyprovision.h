#ifndef MBED_MACRONIX_KEYPROVISION_H
#define MBED_MACRONIX_KEYPROVISION_H

// #include "SecureFlashBlockDevice.h"

// #define SET_BLOB_VALID(name) uint8_t name[] = {                                   
// 		0x34, 0x09, 0x21, 0x01, 0x10, 0x26, 0x1E, 0x14, /* 0x7FF000 - 0x7FF007 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF008 - 0x7FF00F */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF010 - 0x7FF017 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF018 - 0x7FF01F */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF020 - 0x7FF027 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF028 - 0x7FF02F */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF030 - 0x7FF037 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF038 - 0x7FF03F */ 
// 		0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF040 - 0x7FF047 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF048 - 0x7FF04F */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF050 - 0x7FF057 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF058 - 0x7FF05F */ 
// 																				  
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF060 - 0x7FF067 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF068 - 0x7FF06F */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF070 - 0x7FF077 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF078 - 0x7FF07F */ 
// 		0x2F, 0xC2, 0xA6, 0xFF, 0x2F, 0xC2, 0xA6, 0xFF, /* 0x7FF080 - 0x7FF087 */ 
// 		0x2F, 0xC2, 0xA6, 0xFF, 0x2F, 0xC2, 0xA6, 0xFF, /* 0x7FF088 - 0x7FF08F */ 
// 		0x2F, 0xC2, 0xA6, 0xFF, 0x2F, 0xC2, 0xA6, 0xFF, /* 0x7FF090 - 0x7FF097 */ 
// 		0x2F, 0xC2, 0xA6, 0xFF, 0x2F, 0xC2, 0xA6, 0xFF, /* 0x7FF098 - 0x7FF09F */ 
// 		0x3F, 0xC3, 0xE6, 0xFF, 0x3F, 0xC3, 0xE6, 0xFF, /* 0x7FF0A0 - 0x7FF0A7 */ 
// 		0x3F, 0xC3, 0xE6, 0xFF, 0x3F, 0xC3, 0xE6, 0xFF, /* 0x7FF0A8 - 0x7FF0AF */ 
// 		0x3F, 0xC3, 0xE6, 0xFF, 0x3F, 0xC3, 0xE6, 0xFF, /* 0x7FF0B0 - 0x7FF0B7 */ 
// 		0x3F, 0xC3, 0xE6, 0xFF, 0x3F, 0x03, 0xEE, 0xFF, /* 0x7FF0B8 - 0x7FF0BF */ 
// 		0x48, 0x00, 0x20, 0xEF, 0x48, 0x00, 0x20, 0xEF, /* 0x7FF0C0 - 0x7FF0C7 */ 
// 		0x58, 0x11, 0x20, 0xEF, 0x58, 0x11, 0x20, 0xEF, /* 0x7FF0C8 - 0x7FF0CF */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF0D0 - 0x7FF0D7 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF0D8 - 0x7FF0DF */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF0E0 - 0x7FF0E7 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF0E8 - 0x7FF0EF */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF0F0 - 0x7FF0F7 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF0F8 - 0x7FF0FF */ 
// 		0x03, 0x00, 0x07, 0x11, 0x0B, 0x22, 0x0F, 0x33, /* 0x7FF100 - 0x7FF107 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF108 - 0x7FF10F */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF110 - 0x7FF117 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF118 - 0x7FF11F */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF120 - 0x7FF127 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF128 - 0x7FF12F */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF130 - 0x7FF137 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF138 - 0x7FF13F */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF140 - 0x7FF147 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF148 - 0x7FF14F */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF150 - 0x7FF157 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF  /* 0x7FF158 - 0x7FF15F */ 
// 	}

// #define SET_BLOB_MASK(name) uint8_t name[] = {                                   
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF000 - 0x7FF007 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF008 - 0x7FF00F */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF010 - 0x7FF017 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF018 - 0x7FF01F */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF020 - 0x7FF027 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF028 - 0x7FF02F */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF030 - 0x7FF037 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF038 - 0x7FF03F */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF040 - 0x7FF047 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF048 - 0x7FF04F */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF050 - 0x7FF057 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF058 - 0x7FF05F */ 
// 																				  
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF060 - 0x7FF067 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF068 - 0x7FF06F */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF070 - 0x7FF077 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF078 - 0x7FF07F */ 
//                                                                                  
// 		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* 0x7FF080 - 0x7FF087 */ 
// 		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* 0x7FF088 - 0x7FF08F */ 
// 		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* 0x7FF090 - 0x7FF097 */ 
// 		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* 0x7FF098 - 0x7FF09F */ // 		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* 0x7FF0A0 - 0x7FF0A7 */ 
// 		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* 0x7FF0A8 - 0x7FF0AF */ 
// 		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* 0x7FF0B0 - 0x7FF0B7 */ 
// 		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* 0x7FF0B8 - 0x7FF0BF */ 
// 		                                                                          
// 		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* 0x7FF0C0 - 0x7FF0C7 */ 
// 		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* 0x7FF0C8 - 0x7FF0CF */ 
//                                                                                  
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF0D0 - 0x7FF0D7 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF0D8 - 0x7FF0DF */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF0E0 - 0x7FF0E7 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF0E8 - 0x7FF0EF */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF0F0 - 0x7FF0F7 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF0F8 - 0x7FF0FF */ 
// 		                                                                          
// 		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* 0x7FF100 - 0x7FF107 */ 
// 		                                                                          
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF108 - 0x7FF10F */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF110 - 0x7FF117 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF118 - 0x7FF11F */ 
// 		                                                                          
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF120 - 0x7FF127 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF128 - 0x7FF12F */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF130 - 0x7FF137 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF138 - 0x7FF13F */ 
// 		                                                                          
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF140 - 0x7FF147 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF148 - 0x7FF14F */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF150 - 0x7FF157 */ 
// 		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, /* 0x7FF158 - 0x7FF15F */ 
// 	}

//  int secureflash_keyprovision(SecureFlashBlockDevice *sfbd);

#endif